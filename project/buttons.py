import random

from aiogram import  types

button_text = {
    "go_to_game": "–ù–∞—á–∏–Ω–∞–µ–º! ‚ñ∂Ô∏è",

    "name_yes": "–î–∞!",
    "name_no": "–ù–µ—Ç, –ø–æ–≤—Ç–æ—Ä–∏—Ç—å",

    "reg_yes": "–î–∞",
    "reg_no": "–ù–µ—Ç",

    "skip_quest": "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å üÜò"
}
# –ö–æ–º–ø–ª–µ–∫—Ç –∫–Ω–æ–ø–æ–∫ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
buttons_of_regs = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).row(
    types.KeyboardButton(text=button_text["reg_yes"]),
    types.KeyboardButton(text=button_text["reg_no"])
)

# –ö–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ä—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
button_of_start = types.InlineKeyboardMarkup(resize_keyboard=True)
button_of_start.add(
    types.InlineKeyboardButton(text=button_text["go_to_game"], callback_data="!reg"))

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å—Ç–∞—Ä—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
key_of_start = types.ReplyKeyboardMarkup(resize_keyboard=True)
key_of_start.add(
    types.KeyboardButton(text=button_text["go_to_game"], callback_data="!reg"))


# –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã.
button_of_run = types.InlineKeyboardMarkup(resize_keyboard=True)
button_of_run.add(
    types.InlineKeyboardButton(text=button_text["go_to_game"], callback_data="!run"))

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å—Ç–∞—Ä—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
key_of_run = types.ReplyKeyboardMarkup(resize_keyboard=True)
key_of_run.add(
    types.KeyboardButton(text=button_text["go_to_game"], callback_data="!run"))


button_of_skip = types.InlineKeyboardMarkup(resize_keyboard=True)
button_of_skip.add(types.KeyboardButton(text=button_text["skip_quest"], callback_data="!skip_quest"))


# –°–ª–æ–≤–∞—Ä—å –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫.
Buttons = {
    "b_start": button_of_start,

    "b_regs": buttons_of_regs,
    "k_start": key_of_start,

    "b_run": button_of_run,
    "k_run": key_of_run,

    "skip_quest": button_of_skip,
}


# –ö–Ω–æ–ø–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤.

class Answers_buttons():

    def __init__(self, list_answers):
        self.keyboard = None
        self.buttons = [
            types.KeyboardButton(list_answers[0]),
            types.KeyboardButton(list_answers[1]),
            types.KeyboardButton(list_answers[2]),
            types.KeyboardButton(list_answers[3]),
        ]

        # for answer in list_answers:
        #     self.buttons.append(types.KeyboardButton(answer))

        self.keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).row(self.buttons[0],
                                                                                         self.buttons[1],
                                                                                         self.buttons[2],
                                                                                         self.buttons[3])

    def restruct(self):
        # self.__answers = list_answers

        random.shuffle(self.buttons)

        return self.keyboard



answ = ["1", "2", "3", "4"]

Buttons_answers = {
    1: Answers_buttons(["3", "2", "5", "8"]),
    2: Answers_buttons(["1675", "18823", "2341", "1759"]),
    3: Answers_buttons(["–¢–∏–≥—Ä", "–ú–µ–¥–≤–µ–¥—å", "–û–±–µ–∑—å—è–Ω–∞", "–õ–∏—Å–∞"]),
    4: Answers_buttons(["–õ–µ—Å—Ç–Ω–∏—Ü–∞", "–°–∞–º–æ–ª–µ—Ç", " –¶–≤–µ—Ç–æ–∫", "–ë–∞–±–æ—á–∫–∞"]),
    5: Answers_buttons(["–¢—Ä–∞–≥—Ä–∞–º", "–¢–∞–Ω–≥—Ä–∞–º", "–¢–∞—Ä–∞–º-—Ç–∞—Ä–∞–º", "–¢–æ—Ä—Ç–≥—Ä–∞–º"]),
    6: Answers_buttons(answ),
    7: Answers_buttons(answ),
    8: Answers_buttons(answ),
}